- How to obtain the source code. If your system uses multiple repositories or submodules, provide clear instructions for how to obtain all relevant sources.

IRFAN - The layout of your directory structure. What do the various directories (folders) contain, and where to find source files, tests, documentation, data files, etc.

Aleksey - How to build the software. Provide clear instructions for how to use your project’s build system to build all system components.

Prerequisites
  - Install Flutter and Dark SDK
  - Install Xcode
  - Install Android Studio
  - Ensure flutter doctor passes all checks by running:
        flutter doctor 
  
Building the Software for iOS
  1. Launch Xcode on your mac
  2. Open the project by selecting File > Open and navigating to the project directory
  3. Select the Runner.xcworkspace file
  4. Inside of your project terminal, navigate to the ios directory and install CocoaPods dependencies
      cd ios && pod install
  5. Inside of Xcode, find the device selection dropdown on top of your screen and select an iOS device
  6. Then click the build button to compile the project

Building the Software for Android
  1. Launch Android Studio on your computer
  2. Open the project by selecting File > Open and navigating to the project directory
  3. Install dependencies by opening the terminal in Android Studio and running:
    flutter pub get
  4. Open the AVD Manager by selecting Tools > AVD Manager
  5. Create or select an Android Virtual Device if one does not exist
  6. Launch the Android Emulator by clicking the Play button next to the selected AVD.
  7. Inside Android Studio, select the target device from the top bar.
  8. Click the build button

Lauren - How to test the software. Provide clear instructions for how to run the system’s test cases. 
In some cases, the instructions may need to include information such as how to access data sources or 
how to interact with external systems. You may reference the user documentation (e.g., prerequisites) 
to avoid duplication.

How to Test the Software
---------------------------
Prerequisites - Before running the tests, make sure you have the following installed:
- Xcode (for iOS development)
- Android Studio (for Android development)
- Flutter and Dart SDK

Running Test Cases
1. Clone the repository
  $ git clone https://github.com/chaafenr/fitcheck.git
  $ cd fitcheck
  $ cd flutter_app

2. Install Dependencies
  $ flutter pub get

3. Run Unit Tests
  $ flutter test

LEANNA - How to add new tests. Are there any naming conventions/patterns to follow when naming test files? Is there a particular test harness to use?

- How to build a release of the software. Describe any tasks that are not automated. For example, should a developer update a version number (in code and documentation) prior to invoking the build system? Are there any sanity checks a developer should perform after building a release?

